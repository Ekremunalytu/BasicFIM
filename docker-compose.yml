# FIM (File Integrity Monitoring) Docker Compose Configuration
# ==============================================================
# Bu dosya tÃ¼m FIM servislerini Docker iÃ§erisinde Ã§alÄ±ÅŸtÄ±rÄ±r.
# Ana makinenizi kirletmeden tam bir FIM sistemi Ã§alÄ±ÅŸtÄ±rabilirsiniz.

services:
  # ================================================================
  # FIM API Service - Backend
  # ================================================================
  fim-api:
    build:
      context: ./services/fim-api
      dockerfile: Dockerfile
    container_name: fim-api
    restart: unless-stopped
    
    ports:
      - "8000:8000"  # API portu
    
    volumes:
      # Database ve log dosyalarÄ±nÄ± host'ta sakla (development iÃ§in)
      # Production'da named volumes kullanabilirsiniz: fim-data:/app/data
      - ./data:/app/data
      - ./logs:/app/logs
      # Config dosyasÄ±nÄ± mount et
      - ./config/config.yaml:/app/config.yaml:ro
    
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - TZ=Europe/Istanbul
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    networks:
      - fim-network

  # ================================================================
  # Frontend Service - Web UI
  # ================================================================
  fim-frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: fim-frontend
    restart: unless-stopped
    
    ports:
      - "3000:80"  # Web UI portu
    
    depends_on:
      fim-api:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health.html"]
      interval: 30s
      timeout: 5s
      retries: 3
    
    networks:
      - fim-network

  # ================================================================
  # Database Initialization Service (Run Once)
  # ================================================================
  fim-db-init:
    build:
      context: ./services/fim-api
      dockerfile: Dockerfile
    container_name: fim-db-init
    
    volumes:
      # Database ve log dosyalarÄ±nÄ± host'ta sakla
      - ./data:/app/data
      # Config dosyasÄ±nÄ± mount et
      - ./config/config.yaml:/app/config.yaml:ro
    
    environment:
      - PYTHONPATH=/app
    
    command: >
      sh -c "
        echo 'ðŸ”§ Database kurulumu baÅŸlatÄ±lÄ±yor...' &&
        python fim_scanner/database/database.py &&
        echo 'ðŸ“‹ Baseline verileri yÃ¼kleniyor...' &&
        python fim_scanner/database/initialize_baseline.py &&
        echo 'âœ… Database kurulumu tamamlandÄ±!'
      "
    
    restart: "no"  # Sadece bir kez Ã§alÄ±ÅŸtÄ±r
    
    networks:
      - fim-network

# ================================================================
# Networks
# ================================================================
networks:
  fim-network:
    driver: bridge
    name: fim-network

# ================================================================
# Volumes (Opsiyonel - Named volumes kullanmak isterseniz)
# ================================================================
volumes:
  fim-data:
    driver: local
  fim-logs:
    driver: local